namespace com.linkedin.ml.metadata

import com.linkedin.common.Urn
import com.linkedin.common.Time
import com.linkedin.common.VersionTag
import com.linkedin.common.CustomProperties
import com.linkedin.common.ExternalReference

/**
 * Properties associated with a ML Model
 */
@Aspect = {
  "name": "mlExperimentProperties"
}
record MLExperimentProperties includes CustomProperties, ExternalReference {

  /**
   * Documentation of the MLModel
   */
  @Searchable = {
    "fieldType": "TEXT",
    "hasValuesFieldName": "hasDescription"
  }
  description: optional string

  /**
   * Date when the MLModel was developed
   */
  date: optional Time

  /**
   * Version of the MLModel
   */
  version: optional VersionTag

  /**
   * Type of Algorithm or MLModel such as whether it is a Naive Bayes classifier, Convolutional Neural Network, etc
   */
  @Searchable = {
    "fieldType": "TEXT_PARTIAL"
  }
  type: optional string

  /**
   * Hyperparameters of the MLModel
   */
  hyperParams: optional array[MLHyperParam]

  /**
   * Metrics of the MLModel used in training
   */
  metrics: optional array[MLMetric]

  /**
   * Tags for the MLModel
   */
  tags: array[string] = [ ]

  /**
   * List of dataset (if any) that use in experiment
   */
  @Relationship = {
    "/*": {
      "name": "Consumes",
      "entityTypes": [ "dataset" ]
    }
  }
  trainingDatasets: optional array[Urn]
}
